### year: 2018
## date: 0504
# EventBus ref: http://greenrobot.org/eventbus/documentation/how-to-get-started/
i- Events are POJO (plain old Java object) without any specific requirements.
i- Bus: need identify thread mode, UI or background thread
i- Listeners/Subscriber: register/unregister, @Subscribe method, parameter is xxEvent
i- bus.post(Event)
i- bus can hold many type events.
# EventBus with Rx
i- 

#
— also: Calls the specified function block with this value as its argument and returns this value: xx.also{ }

— fold vs reduce , fold has a init value
val sum = listOf(1, 2, 3).fold(3,  { sum, element -> sum + element })// 3+1+2+3 
 val sum = listOf(1, 2, 3).reduce{ sum, element -> sum + element } // 1+2+3
— blockingFirst/Last is from RxJava, belongs to Observable
— lateinit vs by lazy: 
— lazy() is a function,  a lamda function, and will execute first time.
— by: delegate, three usages, by lazy{} , store a property in a map
— lateinit can be check with . isInitialized
— empty class: class Exxx
— may interesting method under kotlin.collections
— has kotlin.reflect package, such as KProperty\
## date: 0502
#
i- package name 不能包含 interface
i- AutoParcel may replace by kotlin( frankiesardo/auto-parcel)
i- 这种autoParcel的语法还是很常见，自带编译，只需要定义接口即可
i- string resource: name=air.weather，引用的时候是 air_weather

## date: 0501
# 
i- CoordinatorLayout，toolbar可能overlap content，需要在layout添加 app:layout_behavior="@string/appbar_scrolling_view_behavior"
i- CoordinatorLayout is a super-powered FrameLayout. 一般用于root
i- 一半屏幕的方式：layout_weight=1, layout_height=0dp; 横屏也类似
i- 隐藏toolbar的简单方式  supportActionBar?.hide()
i- landscape layout: add folder: layout-land
i- kotlin guard:         val orientation = newConfig?.orientation.let { it } ?: return
?- 在android如果landscape/portrait的layout不一样，则看上去代价很大，因为要重新加载整个activity。
考虑到这点，如果涉及到数据下载，需要把数据下载和cache部分采用特殊的形式处理，而不是一旋转就要重新load数据.
-- 一个方法是存储起来savedInstanceState
?- setContentView这个函数安全吗？能动态的调整layout？我遇到的都是crash 
i- kotlin coroutines： 最常见的方式 async{}, launch{} , launch(context = UI)
i- Suspending functions/lambda: 比如当async{} 中调用这个函数的时候，async当前的线程会被悬挂起来
i- async vs launch，后者无法获取返回值但可以用join得到执行完成，前者可以通过wait来获取异步结果
i- kotlin android extension中包含一个data class的@Parcelize/Parceable，无需去实现parceable的代码
i- 需要的时候可以加 @SuppressLint("ParcelCreator") 来消除编译错误
i- FAB default icon: ic_menu_ & ic_dialog_
## date: 0317
#
kotlin, no need of findViewById, use the id as the variable.

#
Task? what's a task of Android?

## date: 0310

# 
Manifest中如何如何允许多个activity同时作为Main启动
Manifest中activity的intent-filter不同参数值的使用场景

#
MVP中presenter与Interactor接口重复的问题

#
在activity如何实现异步的调用有哪些基本方式

